// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Source {
  ICD11
  NAMASTE
  BOTH
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Disease {
  id          String          @id @default(cuid())
  icd11Code   String?         @unique
  namasteCode String?         @unique
  description String?
  source      Source
  verified    Boolean         @default(true)

  names       DiseaseName[]
  mappings    DiseaseMapping[]
  version     Int      @default(1) 

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([icd11Code])
  @@index([namasteCode])
}

model DiseaseName {
  id        String  @id @default(cuid())
  name      String
  language  String?
  diseaseId String
  disease   Disease @relation(fields: [diseaseId], references: [id])

  createdAt DateTime @default(now())
}

model DiseaseMapping {
  id          String   @id @default(cuid())
  diseaseId   String
  icd11Code   String
  description String?
  priority    Int
  validated   Boolean  @default(false)

  disease     Disease @relation(fields: [diseaseId], references: [id])

  createdAt   DateTime @default(now())
}

model Patient {
  id         String   @id @default(cuid()) 
  externalId String?  // optional hospital/external ID
  givenName  String
  gender     String
  birthDate  DateTime
  version   Int      @default(1)  // ðŸ”¹ version tracking

  codes      InputCode[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model InputCode {
  code_id     Int    @id @default(autoincrement())
  code        String
  system      String // "ICD-11" or "Namaste"
  priority    Int?
  isPrimary   Boolean  @default(false)
  createdAt   DateTime @default(now())

  patientId   String
  patient     Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)

  @@index([patientId])
}

model AuditEvent {
  id        String   @id @default(cuid())
  action    String   // CREATE | UPDATE | DELETE
  resource  String   // e.g. "Patient/example-patient-001"
  user      String   // e.g. "Dr. Rajesh Kumar"
  status    String   // success | warning | error
  details   String?
  createdAt DateTime @default(now())
}
